version: "3.7"
services:
  mongo:
    image: 'mongo:4.2'
    ports:
      - '27018:27017'
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_DATABASE=auth
      - MONGO_INITDB_ROOT_PASSWORD=pass
    networks: 
      - mongo-compose-network
    volumes:
      - 'mongo:/data/db'
  
  mongo-express:
    container_name: mongo-express
    image: mongo-express
    depends_on:
      - mongo
    networks: 
      - mongo-compose-network
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo-dev
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=pass
      - ME_CONFIG_BASICAUTH_USERNAME=admin
      - ME_CONFIG_BASICAUTH_PASSWORD=tribes
    ports:
      - '8081:8081'
    volumes: 
      - 'mongo:/data/db'     

  app:
    build:
      context: .
      dockerfile: ./Dockerfile
    restart: on-failure
    ports:
      - "3000:3000"
    expose:
      - "3000"
    volumes:
      - .:/usr/src/app/
      - ./logs:/logs
    working_dir: /usr/src/app
    environment: 
      PORT: 3000
      DB_HOST: mongodb://mongo:27017/example_db
      NODE_ENV: production
      SLACK_SIGNING_SECRET: 989898
      SLACK_BOT_TOKEN: 54545454
    env_file:
      - .env
    networks:
      - backend
  # redis:
  #   image: "redis"
  #   ports:
  #     - "6380:6379"
  # kafka:
  #   image: "landoop/fast-data-dev"
  #   environment:
  #     - ADV_HOST=127.0.0.1
  #   ports:
  #     - "2181:2181"
  #     - "3030:3030"
  #     - "8081:8081"
  #     - "8082:8082"
  #     - "9092:9092"

networks:
  mongo-compose-network:
    driver: bridge
  backend:

volumes:
  mongo: